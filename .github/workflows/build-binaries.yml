name: Build Cross-Platform Binaries and Frontend Assets

on:
  push:
    tags:
      - "v[0-9]+.[0-9]+.[0-9]+"
  workflow_dispatch:

permissions:
  contents: write
  packages: write
  id-token: write

jobs:
  build-binaries:
    runs-on: ${{ matrix.os }}
    strategy:
      fail-fast: false
      matrix:
        include:
          - os: ubuntu-24.04
            target: x86_64-unknown-linux-gnu
            arch: x86_64
            platform: linux
          - os: ubuntu-24.04
            target: aarch64-unknown-linux-gnu
            arch: aarch64
            platform: linux
          - os: ubuntu-24.04
            target: x86_64-unknown-linux-musl
            arch: x86_64
            platform: linux
          - os: ubuntu-24.04
            target: aarch64-unknown-linux-musl
            arch: aarch64
            platform: linux
          - os: windows-2025
            target: x86_64-pc-windows-gnu
            arch: x86_64
            platform: windows
          - os: windows-2025
            target: x86_64-pc-windows-msvc
            arch: x86_64
            platform: windows

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Install Rust toolchain
        uses: dtolnay/rust-toolchain@stable
        with:
          targets: ${{ matrix.target }}

      - name: Setup musl-tools (Linux)
        if: contains(matrix.target, 'musl')
        run: |
          sudo apt-get update
          sudo apt-get install -y musl-tools pkg-config make perl binutils-mingw-w64-x86-64

      - uses: pnpm/action-setup@v4
        name: Install pnpm
        with:
          version: 10
          run_install: false
          package_json_file: "./frontend/package.json"

      - name: Setup Node.js
        uses: actions/setup-node@v5
        with:
          node-version: "22"
          cache: "pnpm"
          cache-dependency-path: ./frontend/pnpm-lock.yaml

      - name: Install frontend dependencies
        working-directory: ./frontend
        run: pnpm install

      - name: Install Zig
        uses: mlugg/setup-zig@v2
        # TODO: Check if 0.15.0 is compatible
        with:
          version: "0.13.0"

      - name: Install cargo-zigbuild
        run: cargo install --locked cargo-zigbuild

      - name: Make build scripts executable
        if: matrix.platform == 'linux'
        run: chmod +x package/build-artifacts.sh package/build-artifacts-windows.sh

      - name: Build artifacts for Linux
        if: matrix.platform == 'linux'
        run: ./package/build-artifacts.sh ${{ matrix.target }}

      - name: Build artifacts for Windows
        if: matrix.platform == 'windows'
        shell: bash
        run: ./package/build-artifacts-windows.sh ${{ matrix.target }}

      - name: Upload artifact (Linux)
        if: matrix.platform == 'linux'
        uses: actions/upload-artifact@v4
        with:
          name: llumen-${{ matrix.target }}
          path: artifacts/${{ matrix.target }}.tar.gz

      - name: Upload artifact (Windows)
        if: matrix.platform == 'windows'
        uses: actions/upload-artifact@v4
        with:
          name: llumen-${{ matrix.target }}
          path: artifacts/${{ matrix.target }}.zip
